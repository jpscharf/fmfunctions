/*
Purpose: Returns the provided timestamp in the format provided.

Returns: Text

Name: timestamp.format ( theTimestamp; theFormat )

Parameters: ( theTimstamp ) Timestamp
            ( theFormat ) text

Dependencies: NONE

References: Modeled after PHP's str_split: http://www.php.net/manual/en/function.date.php
            Orginal FormatTimestamp by Thomas Seidler (http://www.briandunning.com/cf/1017)

Notes:  Does not provide full PHP date functionality, the following format characters are ignored:
        B - Swatch Internet time, u - microseconds, or any of the timezone formatting ( e, I, O, P, T, Z )

2012-10-14, JPS, Created from FormatTimestamp.
*/

Let (

[

// substitution for constant expressions - i.e. submit RFC822 and away-ish you go - u still need to add timezone stuff to end afterwards...
_f = Substitute (_f ; ["RFC822" ; "D, d M y H:i:s"]; ["RSS"; "D, d M Y H:i:s"]);

    //Setup Special Formats
    formatRFC2822 = "D, d M y H:i:s";
    formatISO8601 = "o-d-m\"T\"";
    //Seconds since Unix Epoch (January 1 1970 00:00:00 GMT)
    //formatUnixEpoch = "";


theFormat = Substitute ( theFormat; )

_c = Left(_f;1) ;
_lf = Length(_f);
_f = Right(_f; _lf-1);
_result = Case (

    // DAY
    Exact(_c; "d" ) ; Right ( "0" & Day( _ts ) ; 2 ) ;
    Exact(_c; "D") ; Left( DayName( _ts ) ; 3 ) ;
    Exact(_c; "j" ); Day ( _ts ) ;
    Exact(_c; "l") ; DayName ( _ts ) ;
    Exact(_c; "N") ; Mod ( DayOfWeek ( _ts ) -2 ; 7 )+1 ;
    Exact(_c; "S" ); /* number_Ordinal_Suffix ( Day ( _ts) ) */ ""  ;
    Exact(_c; "w" ); DayOfWeek ( _ts ) - 1  ;
    Exact(_c; "z") ; DayOfYear ( _ts )  ;

    // WEEK
    Exact(_c; "W") ; WeekOfYearFiscal ( _ts ; 2 )  ;

    // MONTH
    Exact(_c; "F" ); MonthName ( _ts )  ;
    Exact(_c; "m") ; Right ( "0" & Month ( _ts ) ; 2) ;
    Exact(_c; "M") ; Left ( MonthName ( _ts ) ; 3 )  ;
    Exact(_c; "n") ; Month ( _ts )  ;
    Exact(_c; "t"); Day ( Date ( Month(_ts)+1 ; -1 ; Year(_ts) ) )  ;

    // YEAR
    // leap year calc nicked from http://www.mitre.org/tech/cots/LEAPCALC.html
    Exact(_c; "L") ; Let ( _y = Year(_ts);  Case ( Mod ( _y ; 4 ) â‰  0 ; 0 ; Mod(_y;400)=0; 1; Mod(_y;100)=0; 0; 1)  )  ;
    Exact(_c; "o"); If ( WeekOfYearFiscal ( _ts ; 2 ) > 51  and Day(_ts)<7 ; Year(_ts)-1 ; Year(_ts) )  ;
    Exact(_c; "Y") ; Year(_ts);
    Exact(_c; "y"); Right(Year(_ts); 2);

    // TIME
    Exact(_c; "a"); If(Hour(_ts)>=12; "pm"; "am") ;
    Exact(_c; "A"); If(Hour(_ts)>=12; "PM"; "AM") ;
    Exact(_c; "g"); Mod( Hour(_ts)-1;12)+1;
    Exact(_c; "G"); Hour(_ts);
    Exact(_c; "h"); Right( "0" & Mod(Hour(_ts)-1;12)+1; 2);
    Exact(_c; "H"); Right ("0" & Hour(_ts); 2);
    Exact(_c; "i"); Right("0" & Minute(_ts); 2);
    Exact(_c; "s"); Right("0" & Seconds(_ts); 2);

    _c

) // end of case



] ;


_result & If(_lf>1; FormatTimestamp (_ts; _f) )

)